name: 'CI .NET'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    #- name: Add SHORT_SHA env property with commit short sha
    #  run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Replace commit hash
      run: sed -i 's/COMMIT_HASH/${{ steps.vars.outputs.sha_short }}/g' builds/cli/notices/README-BLEEDING

    - name: Build
      run: dotnet publish -c Release -r win-x64 --self-contained true src/TestApp/TestApp.csproj -o app-bleeding-win-x64/ && cp builds/cli/notices/* app-bleeding-win-x64
      
    - name: Build
      run: dotnet publish -c Release -r linux-x64 --self-contained true src/TestApp/TestApp.csproj -o app-bleeding-linux-x64/ && cp builds/cli/notices/* app-bleeding-win-x64
      
    - name: Build
      run: dotnet publish -c Release -r osx-x64 --self-contained true src/TestApp/TestApp.csproj -o app-bleeding-osx-x64/ && cp builds/cli/notices/* app-bleeding-win-x64

    - uses: montudor/action-zip@v1
      name: Package win-x64
      with:
        args: zip -r app-bleeding-win-x64-${{ steps.vars.outputs.sha_short }}.zip app-bleeding-win-x64/

    - name: Package linux-x64
      run: tar -czf app-bleeding-linux-x64-${{ steps.vars.outputs.sha_short }}.tar.gz app-bleeding-linux-x64/
      
    - name: Package osx-x64
      run: tar -czf app-bleeding-osx-x64-${{ steps.vars.outputs.sha_short }}.tar.gz app-bleeding-osx-x64/    

    - uses: pyTooling/Actions/releaser/composite@main
      name: Releaser
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: 'app-bleeding*'
        tag: 'bleeding'
        
